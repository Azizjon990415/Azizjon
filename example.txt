
Azizjon@DESKTOP-8DVK8ED MINGW64 ~
$ cd d
bash: cd: d: No such file or directory

Azizjon@DESKTOP-8DVK8ED MINGW64 ~
$ cd f
bash: cd: f: No such file or directory

Azizjon@DESKTOP-8DVK8ED MINGW64 ~
$ cd f:/

Azizjon@DESKTOP-8DVK8ED MINGW64 /f
$ mkdir Projects

Azizjon@DESKTOP-8DVK8ED MINGW64 /f
$ cd projects

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects
$ cd c:

Azizjon@DESKTOP-8DVK8ED MINGW64 /c
$ cd f:/projects

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects
$ mkdir project1

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects
$ cd project1

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ ls

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ ls

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ ls

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ cd project1
bash: cd: project1: No such file or directory

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ cd ^C

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects/project1
$ cd f:/projects

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects
$ ls
project1/

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects
$ git init
Initialized empty Git repository in F:/Projects/.git/

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --default <value>     with --get, use default value when missing entry


Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git config --global user.name 'userforg16Aziz'

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git config --global user.email 'azizjon990415@gmail.com'

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git config--list
git: 'config--list' is not a git command. See 'git --help'.

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git config --list
core.symlinks=false
core.autocrlf=true
core.fscache=true
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
help.format=html
rebase.autosquash=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
credential.helper=manager
user.name=userforg16Aziz
user.email=azizjon990415@gmail.com
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        project1/

nothing added to commit but untracked files present (use "git add" to track)

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git add project1

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   project1/example.txt//quit nano ctr
//quit commit ec shift : quit



Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$ git commit
Aborting commit due to empty commit message.

Azizjon@DESKTOP-8DVK8ED MINGW64 /f/projects (master)
$
